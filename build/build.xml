<project name="JaqLib" default="deploy" basedir=".">

	<!-- ========================================= -->
	<!-- User defined paths -->
	<!-- ========================================= -->
	
	<property name="dist.dir" value="F:/Projekte/JaQLib/release" />
	<property name="build.temp" value="F:/Projekte/JaQLib/temp" />
	
	
	<!-- ========================================= -->
	<!-- Properties for version management -->
	<!-- ========================================= -->	
	
	<property file="./version.properties" />
	<property name="version.fullString" value="${version.major}.${version.minor}" />
	
	
	<!-- ========================================= -->
	<!-- Properties for source paths -->
	<!-- ========================================= -->
	
	<property name="build.base" value="${ant.file.JaqLib}/../.." />
	<property name="build.source" value="${build.base}/components" />
	<property name="build.temp.javadoc" value="${build.temp}/javadoc" />
	
	<property name="vendor.base" value="${build.base}/vendor" />
	
	<property name="jaqlib_main.base" value="${build.source}/jaqlib_main" />
	<property name="jaqlib_main.source" value="${jaqlib_main.base}/java" />
	<property name="jaqlib_main.unittest" value="${jaqlib_main.base}/unittest" />	
	
	<property name="jaqlib_core.base" value="${build.source}/jaqlib_core" />
	<property name="jaqlib_core.source" value="${jaqlib_core.base}/java" />
	<property name="jaqlib_core.unittest" value="${jaqlib_core.base}/unittest" />

	<property name="jaqlib_iterable.base" value="${build.source}/jaqlib_iterable" />
	<property name="jaqlib_iterable.source" value="${jaqlib_iterable.base}/java" />
	<property name="jaqlib_iterable.unittest" value="${jaqlib_iterable.base}/unittest" />

	<property name="jaqlib_db.base" value="${build.source}/jaqlib_db" />
	<property name="jaqlib_db.source" value="${jaqlib_db.base}/java" />
	<property name="jaqlib_db.unittest" value="${jaqlib_db.base}/unittest" />
	
	<property name="jaqlib_util.base" value="${build.source}/jaqlib_util" />
	<property name="jaqlib_util.source" value="${jaqlib_util.base}/java" />
	<property name="jaqlib_util.unittest" value="${jaqlib_util.base}/unittest" />

	
	<path id="jaqlib.libs">
		<fileset file="${vendor.base}/cglib/cglib-nodep-2.1_3.jar" />
		<fileset file="${vendor.base}/derby/derby.jar" />
	</path>
	
	<path id="jaqlib.unittest.libs">
		<fileset file="${vendor.base}/junit/junit.jar" />
		<fileset file="${vendor.base}/easymock/easymock.jar" />
	</path>	
	
	<path id="jaqlib.components">
		<fileset dir="${build.temp}/zip" />
	</path>
	
	<path id="jaqlib.unittest.components">
		<fileset dir="${build.temp}/zip_unittest" />
	</path>	
	
	
	<!-- ========================================= -->
	<!-- Targets -->
	<!-- ========================================= -->
	
	<target name="clean">
		<delete dir="${build.temp}" />
	</target>
	
	
	<target name="init">
		<mkdir dir="${build.temp}" />
		<mkdir dir="${build.temp}/zip" />
		<mkdir dir="${build.temp}/zip_unittest" />
	</target>
	
	
	<target name="compile_component">
		<!-- Compile component -->
		<property name="compile.target.dir" value="${build.temp}/bin/${component.name}" />
		<mkdir dir="${compile.target.dir}" />
		<javac destdir="${compile.target.dir}" srcDir="${build.source}/${component.name}/java" source="1.5" target="1.5" debug="false" failonerror="true" optimize="true" >
			<classpath refid="jaqlib.libs" />
			<classpath refid="jaqlib.components" />
		</javac>
		
		<!-- ZIP compiled classes -->
		<zip destfile="${build.temp}/zip/${component.name}.zip" basedir="${compile.target.dir}" />
	</target>
	
	
	<target name="compile_unittestcomponent">
		<!-- Compile component -->
		<property name="compile.unittest.target.dir" value="${build.temp}/bin/${component.name}" />
		<mkdir dir="${compile.unittest.target.dir}" />
		<javac destdir="${compile.unittest.target.dir}" srcDir="${build.source}/${component.name}/unittest" source="1.5" target="1.5" debug="false" failonerror="true" optimize="true" >
			<classpath refid="jaqlib.libs" />
      <classpath refid="jaqlib.components" />
			<classpath refid="jaqlib.unittest.libs" />
      <classpath refid="jaqlib.unittest.components" />
		</javac>
		
		<!-- ZIP compiled classes -->
		<zip destfile="${build.temp}/zip_unittest/${component.name}.zip" basedir="${compile.unittest.target.dir}" />
	</target>
	
	
	<target name="compile">
		<antcall target="compile_component" >
			<param name="component.name" value="jaqlib_util" />
		</antcall>
		<antcall target="compile_component" >
			<param name="component.name" value="jaqlib_core" />
		</antcall>
		<antcall target="compile_component" >
			<param name="component.name" value="jaqlib_iterable" />
		</antcall>
	  <antcall target="compile_component" >
	    <param name="component.name" value="jaqlib_db" />
	  </antcall>		
		<antcall target="compile_component" >
			<param name="component.name" value="jaqlib_main" />
		</antcall>
	</target>
	
		
	<target name="javadoc">
		<mkdir dir="${build.temp}/javadoc/jaqlib" />
		<javadoc destdir="${build.temp}/javadoc/jaqlib" >
			<classpath refid="jaqlib.libs" />
			<sourcepath path="${jaqlib_util.source}" />
			<sourcepath path="${jaqlib_core.source}" />
			<sourcepath path="${jaqlib_iterable.source}" />
			<sourcepath path="${jaqlib_db.source}" />
			<sourcepath path="${jaqlib_main.source}" />
		</javadoc>
	</target>
	
		
	<target name="compile_unittest" depends="compile">
		<antcall target="compile_unittestcomponent" >
			<param name="component.name" value="jaqlib_util" />
		</antcall>
		<antcall target="compile_unittestcomponent" >
			<param name="component.name" value="jaqlib_core" />
		</antcall>
		<antcall target="compile_unittestcomponent" >
			<param name="component.name" value="jaqlib_iterable" />
		</antcall>
	  <antcall target="compile_unittestcomponent" >
	    <param name="component.name" value="jaqlib_db" />
	  </antcall>		
		<antcall target="compile_unittestcomponent" >
			<param name="component.name" value="jaqlib_main" />
		</antcall>
	</target>

		
	<target name="unittest" depends="compile_unittest">
		<mkdir dir="${build.temp}/unittest_results/jaqlib" />
		
		<!-- Unittests with CGLib on classpath -->
		<junit haltonfailure="false" failureproperty="junit.cglibtests.failure" >
			<classpath refid="jaqlib.components" />
			<classpath refid="jaqlib.unittest.components" />
			<classpath refid="jaqlib.libs" />
			<classpath refid="jaqlib.unittest.libs" />
			<test name="org.jaqlib.JaqLibClassTests" toDir="${build.temp}/unittest_results/jaqlib" />
			<formatter type="xml"/>
		</junit>
		
		<!-- Unittests without CGLib on classpath -->
		<junit haltonfailure="false" failureproperty="junit.failure">
			<classpath refid="jaqlib.components" />
			<classpath refid="jaqlib.unittest.components" />
			<classpath refid="jaqlib.unittest.libs" />
			<test name="org.jaqlib.JaqLibInterfaceTests" toDir="${build.temp}/unittest_results/jaqlib" />
			<formatter type="xml"/>
		</junit>
		
	  <!-- DB tests -->
	  <junit haltonfailure="false" failureproperty="junit.failure" fork="true">
      <classpath refid="jaqlib.components" />
      <classpath refid="jaqlib.unittest.components" />
      <classpath refid="jaqlib.libs" />
      <classpath refid="jaqlib.unittest.libs" />
	    <test name="org.jaqlib.DatabaseQBTests" toDir="${build.temp}/unittest_results/jaqlib" />
	    <formatter type="xml"/>
	  </junit>		
		
		<!-- Util tests -->
		<junit haltonfailure="false" failureproperty="junit.failure">
			<classpath refid="jaqlib.components" />
			<classpath refid="jaqlib.unittest.components" />
			<classpath refid="jaqlib.unittest.libs" />
			<test name="org.jaqlib.util.JaqLibUtilTests" toDir="${build.temp}/unittest_results/jaqlib" />
			<formatter type="xml"/>
		</junit>		
		
		<mkdir dir="${build.temp}/unittest_reports/jaqlib" />
		<junitreport todir="${build.temp}/unittest_reports">
			<fileset dir="${build.temp}/unittest_results/jaqlib" />
			<report todir="${build.temp}/unittest_reports/jaqlib"/>
		</junitreport>
	</target>
	
	
	<target name="jar" depends="compile, javadoc">
		<mkdir dir="${build.temp}/jar" />
		
		<jar destfile="${build.temp}/jar/jaqlib-${version.fullString}.jar" >
			<zipgroupfileset dir="${build.temp}/zip" />
			<fileset file="${build.base}/doc/apache_license-2.0.txt" />
		</jar>
		<jar destfile="${build.temp}/jar/jaqlib-${version.fullString}-src.zip" >
			<fileset dir="${jaqlib_util.source}" />
			<fileset dir="${jaqlib_core.source}" />
			<fileset dir="${jaqlib_iterable.source}" />
			<fileset dir="${jaqlib_db.source}" />
			<fileset dir="${jaqlib_main.source}" />
		</jar>
		<jar destfile="${build.temp}/jar/jaqlib-${version.fullString}-unittest.zip" >
			<fileset dir="${jaqlib_util.unittest}" />
			<fileset dir="${jaqlib_core.unittest}" />
			<fileset dir="${jaqlib_iterable.unittest}" />
			<fileset dir="${jaqlib_db.unittest}" />
			<fileset dir="${jaqlib_main.unittest}" />
		</jar>
		<jar destfile="${build.temp}/jar/jaqlib-${version.fullString}-doc.zip" basedir="${build.temp}/javadoc/jaqlib" />
	</target>
	
	
	<target name="deploy" depends="clean, init, unittest, jar">
		<mkdir dir="${dist.dir}/${version.fullString}/dist" />
		<copy toDir="${dist.dir}/${version.fullString}/dist" >
			<fileset dir="${build.temp}/jar" />
		</copy>
		<mkdir dir="${dist.dir}/${version.fullString}/reports/unittest" />
		<copy toDir="${dist.dir}/${version.fullString}/reports/unittest" >
			<fileset dir="${build.temp}/unittest_reports/jaqlib" />
		</copy>
    <mkdir dir="${dist.dir}/${version.fullString}/reports/javadoc" />
    <copy toDir="${dist.dir}/${version.fullString}/reports/javadoc" >
      <fileset dir="${build.temp}/javadoc/jaqlib" />
    </copy>
		
		<delete dir="./dbunittest" failonerror="false" />
	</target>
	
	
</project>
